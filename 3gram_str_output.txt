Instr :  [<Tcond.PREV_DFS: 5>, <Tcond.WRITE_VALUE: 6>, <Tcond.PREV_DFS: 5>, <Tcond.WRITE_VALUE: 6>]
0,- [str.len] -> 1.000
C_2,0 [1] -> 1.000
_,str.substr [str.++] -> 0.024
_,str.substr [Var] -> 0.976
"",str.replace [Var] -> 1.000
0,str.indexof [str.++] -> 0.071
0,str.indexof [Var] -> 0.929
C_1,0 [2] -> 1.000
Var,+ [str.indexof] -> 0.500
Var,+ [5] -> 0.400
Var,+ [+] -> 0.100
str.++,C_5 [C_5] -> 1.000
_,= [str.indexof] -> 1.000
C_0,Var [C_0] -> 1.000
_,str.replace [str.replace] -> 0.727
_,str.replace [Var] -> 0.273
str.replace,C_3 [Var] -> 1.000
1,str.len [Var] -> 1.000
+,str.indexof [Var] -> 1.000
C_1,str.++ [C_0] -> 1.000
+,-1 [Var] -> 1.000
str.prefixof,C_3 [Var] -> 1.000
str.len,Var [3] -> 1.000
C_1,C_2 [C_1] -> 1.000
+,5 [3] -> 1.000
0,2 [str.++] -> 1.000
Var,0 [-] -> 0.160
Var,0 [str.indexof] -> 0.560
Var,0 [3] -> 0.160
Var,0 [+] -> 0.120
_,ite [str.prefixof] -> 0.286
_,ite [str.suffixof] -> 0.571
_,ite [str.contains] -> 0.143
C_5,C_5 [str.++] -> 0.167
C_5,C_5 [1] -> 0.167
C_5,C_5 [C_5] -> 0.500
C_5,C_5 [Var] -> 0.167
ite,str.prefixof [C_3] -> 0.500
ite,str.prefixof [Var] -> 0.500
str.++,C_0 [C_0] -> 0.500
str.++,C_0 [str.substr] -> 0.500
_,str.contains [str.++] -> 0.143
_,str.contains [str.replace] -> 0.143
_,str.contains [Var] -> 0.714
Var,str.len [Var] -> 1.000
Var,Var [str.len] -> 0.083
Var,Var [str.++] -> 0.333
Var,Var [C_0] -> 0.083
Var,Var [Var] -> 0.500
_,str.at [str.++] -> 1.000
str.prefixof,Var [Var] -> 1.000
C_2,C_0 [C_2] -> 1.000
0,1 [str.len] -> 1.000
str.++,str.++ [C_0] -> 0.667
str.++,str.++ [C_5] -> 0.167
str.++,str.++ [str.++] -> 0.167
Var,C_2 [str.len] -> 0.050
Var,C_2 [1] -> 0.250
Var,C_2 [C_0] -> 0.050
Var,C_2 [0] -> 0.400
Var,C_2 [C_1] -> 0.250
str.indexof,Var [C_2] -> 0.667
str.indexof,Var [C_0] -> 0.238
str.indexof,Var [C_5] -> 0.095
C_0,1 [C_0] -> 1.000
C_5,0 [-1] -> 1.000
_,str.prefixof [Var] -> 1.000
5,3 [3] -> 1.000
str.suffixof,Var [Var] -> 1.000
Var,C_5 [1] -> 0.167
Var,C_5 [C_0] -> 0.167
Var,C_5 [C_5] -> 0.500
Var,C_5 [0] -> 0.167
str.contains,Var [C_5] -> 0.167
str.contains,Var [Var] -> 0.833
+,+ [str.len] -> 1.000
str.contains,str.++ [str.++] -> 1.000
C_3,Var [C_0] -> 0.500
C_3,Var [Var] -> 0.500
_,str.++ [""] -> 0.500
_,str.++ [str.substr] -> 0.500
2,str.++ [C_1] -> 1.000
str.at,str.++ [C_6] -> 1.000
str.++,C_3 [C_5] -> 1.000
str.++,C_6 [Var] -> 1.000
Var,C_0 [0] -> 0.364
Var,C_0 [str.++] -> 0.364
Var,C_0 [C_0] -> 0.091
Var,C_0 [1] -> 0.091
Var,C_0 [Var] -> 0.091
str.substr,str.++ [C_6] -> 1.000
Var,str.replace [C_3] -> 1.000
ite,str.contains [Var] -> 1.000
0,+ [-1] -> 0.667
0,+ [str.indexof] -> 0.333
str.contains,str.replace [Var] -> 1.000
Var,str.++ [str.++] -> 0.500
Var,str.++ [Var] -> 0.500
C_0,C_0 [C_1] -> 1.000
str.indexof,str.++ [Var] -> 1.000
str.len,C_5 [1] -> 1.000
str.++,C_1 [str.++] -> 1.000
C_1,Var [Var] -> 1.000
+,str.len [C_5] -> 1.000
str.substr,C_1 [0] -> 1.000
str.suffixof,C_1 [Var] -> 1.000
Var,1 [str.indexof] -> 1.000
_,int.to.str [Var] -> 1.000
_,str.suffixof [Var] -> 1.000
str.len,str.++ [C_5] -> 1.000
Var,4 [3] -> 1.000
C_0,C_2 [C_0] -> 1.000
str.++,str.substr [C_1] -> 1.000
C_0,str.++ [""] -> 1.000
C_5,1 [1] -> 1.000
C_2,1 [-1] -> 0.500
C_2,1 [1] -> 0.500
-,str.len [Var] -> 1.000
C_0,str.substr [Var] -> 1.000
Var,str.substr [Var] -> 1.000
str.++,Var [C_5] -> 0.200
str.++,Var [str.++] -> 0.800
str.++,"" [str.replace] -> 0.500
str.++,"" [C_1] -> 0.500
str.replace,Var [C_2] -> 0.375
str.replace,Var [C_5] -> 0.188
str.replace,Var [Var] -> 0.062
str.replace,Var [str.substr] -> 0.062
str.replace,Var [C_0] -> 0.250
str.replace,Var [str.replace] -> 0.062
_,_ [str.at] -> 0.013
_,_ [str.contains] -> 0.087
_,_ [ite] -> 0.087
_,_ [str.replace] -> 0.138
_,_ [str.prefixof] -> 0.025
_,_ [str.++] -> 0.100
_,_ [int.to.str] -> 0.013
_,_ [str.substr] -> 0.512
_,_ [str.suffixof] -> 0.013
_,_ [=] -> 0.013
str.replace,str.replace [Var] -> 1.000
1,1 [str.len] -> 1.000
1,str.indexof [Var] -> 1.000
C_5,str.++ [C_3] -> 1.000
Var,3 [3] -> 1.000
C_2,str.len [str.++] -> 1.000
C_6,Var [Var] -> 1.000
=,str.indexof [Var] -> 1.000
ite,str.suffixof [C_1] -> 1.000
str.substr,Var [1] -> 0.022
str.substr,Var [4] -> 0.089
str.substr,Var [Var] -> 0.022
str.substr,Var [-] -> 0.089
str.substr,Var [0] -> 0.556
str.substr,Var [+] -> 0.222
C_2,C_1 [C_2] -> 1.000
C_3,C_5 [C_0] -> 1.000
Var,- [str.len] -> 1.000
2
(define-fun f ((name String)) String (str.substr name (+ (str.indexof name " " 0) 1) 3))
